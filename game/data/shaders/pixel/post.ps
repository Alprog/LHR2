
varying vec2 v_texCoord;

uniform sampler2D colorTexture;
uniform sampler2D velocityTexture;
uniform vec2 texelSize;
uniform float velocityScale;

void main()
{	
    vec4 tex = texture2D(velocityTexture, v_texCoord);
    vec2 velocity = tex.rg * velocityScale / 2; 
    
    velocity = normalize(velocity) * clamp(length(velocity), 0, 0.15);
    
    float len = length(velocity / texelSize);
    int count = clamp(int(len), 1, 15);
    
    vec4 color = texture2D(colorTexture, v_texCoord);
    for (int i = 1; i < count; i++) 
    {
        vec2 offset = velocity * (float(i) / float(count) - 0.5);
        vec2 pos = v_texCoord - offset;
        color += texture2D(colorTexture, pos);
    }
    color /= count;

    gl_FragColor = color;
}

//float a = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;
//gl_FragColor = vec4(a, a, a, 1);
    