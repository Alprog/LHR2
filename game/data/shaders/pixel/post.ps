
varying vec2 v_texCoord;

uniform sampler2D colorTexture;
uniform sampler2D velocityTexture;
uniform vec2 texelSize;
uniform float velocityScale;

void main()
{	
    vec4 tex = texture2D(velocityTexture, v_texCoord);
    vec2 velocity = tex.rg;
    velocity.x = pow(velocity.x, 1.0 / 4.0);
    velocity.y = pow(velocity.y, 1.0 / 4.0);
    velocity = (velocity * 2 - 1) * velocityScale / 2;
    
    if (tex.b < 0.5)
        velocity = vec2(0, 0);
    
    
    float len = length(velocity / texelSize);
    int count = clamp(int(len), 1, 15);
    
    vec4 color;
    if (count < 2)
    {
        color = texture2D(colorTexture, v_texCoord);
    }
    else
    {
        color = vec4(0, 0, 0, 0);
        for (int i = 0; i < count; i++) 
        {
            vec2 offset = velocity * (float(i) / float(count) - 0.5);
            color += texture2D(colorTexture, v_texCoord + offset);
        }
        color /= count;
    }
    
    gl_FragColor = color;
}

//float a = 0.2126 * color.r + 0.7152 * color.g + 0.0722 * color.b;
//gl_FragColor = vec4(a, a, a, 1);
    