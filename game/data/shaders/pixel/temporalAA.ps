
varying vec2 v_texCoord;
varying vec3 v_normal;

uniform sampler2D mainTexture;
uniform sampler2D velocityTexture;
uniform sampler2D historyTexture;
uniform vec2 veloOffset;

float getLuma(vec3 color)
{
    return color.r * 0.3 + color.g * 0.59 + color.b * 0.11;
}

void main()
{	
	vec4 mainColor = texture2D(mainTexture, v_texCoord);
    vec2 velocity = texture2D(velocityTexture, v_texCoord).xy + veloOffset;
    
    float v = length(velocity) * 100;
    
    vec4 historyColor = texture2D(historyTexture, v_texCoord - velocity / 2);
    
    float power = clamp(v, 0.2, 1);
    power = clamp((historyColor.a - power) * 5, power, 1);

    //float d = abs(getLuma(historyColor.rgb) - getLuma(mainColor.rgb));
    //power = max(power, d);
    

    gl_FragColor = mix(historyColor, mainColor, power);
    
    gl_FragColor.a = v;
}
